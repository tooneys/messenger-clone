generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                  @id @default(autoincrement())
  name               String
  email              String               @unique
  emailVerified      DateTime?
  image              String?
  hashedPassword     String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  messages           Message[]
  seenMessages       seenUserToMessage[]
  UserToConversation UserToConversation[]
  accout             SocialAccount?
}

model SocialAccount {
  id                Int     @id @default(autoincrement())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  userId            Int     @unique
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Conversation {
  id            Int                  @id @default(autoincrement())
  creaetedAt    DateTime             @default(now())
  lastMessageAt DateTime             @default(now())
  name          String?
  isGroup       Boolean?
  userIds       Int[]
  messageIds    Int[]
  messages      Message[]
  users         UserToConversation[]
}

model Message {
  id              Int                 @id @default(autoincrement())
  body            String?
  image           String?
  createdAt       DateTime            @default(now())
  conversationIds Int
  conversation    Conversation        @relation(fields: [conversationIds], references: [id], onDelete: Cascade)
  senderId        Int
  sender          User                @relation(fields: [senderId], references: [id], onDelete: Cascade)
  users           seenUserToMessage[]
}

model UserToConversation {
  userId         Int
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])
  createdAt      DateTime     @default(now())

  @@id([userId, conversationId])
}

model seenUserToMessage {
  userId    Int
  messageId Int
  message   Message @relation(fields: [messageId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@id([userId, messageId])
}
